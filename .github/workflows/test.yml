name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ismaster\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
    
    - name: Run backend tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/test-db
        JWT_SECRET: test-jwt-secret
    
    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./server/coverage
        flags: backend

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Run frontend tests
      run: npm run test:coverage
    
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
        flags: frontend

  integration-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ismaster\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
    
    - name: Start backend server
      run: |
        cd server
        npm start &
        sleep 10
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/integration-test-db
        JWT_SECRET: integration-test-jwt-secret
        PORT: 5000
    
    - name: Run integration tests
      run: npm run test:all
      env:
        VITE_API_URL: http://localhost:5000/api
    
    - name: Stop backend server
      run: pkill -f "node.*server"
